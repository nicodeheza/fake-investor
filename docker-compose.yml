version: "3"
services:
  nginx:
    image: nginx:stable-alpine
    volumes:
      - web-root:/usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "4000:4000"
    networks:
      - fi-network
    restart: unless-stopped
    depends_on:
      - node-app
  node-app:
    build:
      context: ./server
      args:
        NODE_ENV: production
    environment:
      - NODE_ENV=production
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_PORT=3306
      - SECRET=${SECRET}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_URL=redis://redis:6379
      - YF_API_KEY=${YF_API_KEY}
    networks:
      - fi-network
    restart: unless-stopped
    depends_on:
      - mysql
      - redis
  mysql:
    image: mysql:8
    # command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=fakeInversor
    ports:
      #change
      - "3307:3306"
    networks:
      - fi-network
    volumes:
      - FIdbV:/var/lib/mysql
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - ./:/usr/local/etc/redis
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    networks:
      - fi-network
volumes:
  FIdbV:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: ./client/build/
      o: bind
networks:
  fi-network:
    driver: bridge
